// -------------------------------------------------------------------------------------------------
// Weitere Infos:
//    https://marcobotto.com/blog/compiling-and-bundling-typescript-libraries-with-webpack/
//
{
  "compileOnSave" :   true,
  "compilerOptions" : {
    "target" :                       "esnext",

    "outDir" :                       "./lib",
    "rootDir":                       "./src",
    
    "module" :                       "commonjs",
    "moduleResolution" :             "node",

    "sourceMap" :                    true,
    "inlineSources" :                true,
    "noImplicitAny" :                true,
    "noImplicitThis" :               true,
    "noUnusedParameters" :           true,
    "noUnusedLocals" :               true,
    "noEmitOnError" :                true,
    "strictNullChecks" :             true,
    "preserveConstEnums" :           true,
    "removeComments" :               false,
    "experimentalDecorators" :       true,
    "emitDecoratorMetadata" :        true,
    "allowSyntheticDefaultImports" : true,

    // Enables emit interoperability between CommonJS and ES Modules
    // via creation of namespace objects for all imports.
    // Implies 'allowSyntheticDefaultImports'
    //
    // Import von Images funkt nicht mehr
    // "esModuleInterop":            true,


    "strict" :                       true,

    // wird mit tsc erstellt
    "declaration" :                  true,

    // Hier landen die types - sonst kommen sie
    // ins outDir
    //
    //"declarationDir" :               "dist",

    "baseUrl":                       "./src",
    "paths": {


       // Pfade m√ºssen auch in WebPack entsprechend definiert sein!

       // Funktioniert nicht!
       //  https://github.com/Microsoft/TypeScript/issues/10866
       // "@main/*":                     [ "main/ts/*"],
       // "@test/*":                     [ "test/ts/*"],
       // "@images/*":                   [ "site/images/*"]
    },

    "lib": ["es2017", "dom"]
    // "lib": [ "dom"],
    // "types": ["node"],

    // Fallback wenn nach d.ts Files gesucht wird
    // "typeRoots": ["node_modules/@types", "src/types"]
  },
  // https://github.com/s-panferov/awesome-typescript-loader
  "awesomeTypescriptLoaderOptions": {
    "useCache":                       false,
    "reportFiles": [
      "src/**/*.{ts,tsx}"
    ]
  },
  "include" : [
    "src/index.ts",
    "src/main/ts",
    "src/test/ts",
    "src/site/images",

    // Damit werden die images erkannt
    "src/site/images/typings.d.ts"
  ]
}